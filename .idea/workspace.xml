<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="ChangeListManager">
    <list default="true" id="c70f70b9-934d-4cf2-b671-01f241360dd1" name="Default" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__clj_time_0_14_3.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__joda_time_2_9_9.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/libraries/Leiningen__org_clojure_tools_namespace_0_2_11.xml" beforeDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/gank.iml" beforeDir="false" afterPath="$PROJECT_DIR$/gank.iml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/src/gank/logic/match.clj" beforeDir="false" afterPath="$PROJECT_DIR$/src/gank/logic/match.clj" afterDir="false" />
    </list>
    <option name="EXCLUDED_CONVERTED_TO_IGNORED" value="true" />
    <option name="TRACKING_ENABLED" value="true" />
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileEditorManager">
    <leaf SIDE_TABS_SIZE_LIMIT_KEY="300">
      <file leaf-file-name="commons.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/gank/logic/commons.clj">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file leaf-file-name="summoner.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/gank/logic/summoner.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="403">
              <caret line="13" column="10" selection-start-line="13" selection-start-column="10" selection-end-line="13" selection-end-column="10" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="date_time.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/gank/logic/date_time.clj">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file leaf-file-name="match.clj" pinned="false" current-in-tab="true">
        <entry file="file://$PROJECT_DIR$/src/gank/logic/match.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="695">
              <caret line="31" column="5" selection-start-line="31" selection-start-column="5" selection-end-line="31" selection-end-column="5" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="champions.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/gank/diplomat/champions.clj">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file leaf-file-name="commons.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/gank/diplomat/commons.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state relative-caret-position="124">
              <caret line="4" column="36" selection-start-line="4" selection-start-column="36" selection-end-line="4" selection-end-column="36" />
            </state>
          </provider>
        </entry>
      </file>
      <file leaf-file-name="match.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/gank/diplomat/match.clj">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file leaf-file-name="ranked_queue.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/gank/diplomat/ranked_queue.clj">
          <provider selected="true" editor-type-id="text-editor" />
        </entry>
      </file>
      <file leaf-file-name="summoner.clj" pinned="false" current-in-tab="false">
        <entry file="file://$PROJECT_DIR$/src/gank/diplomat/summoner.clj">
          <provider selected="true" editor-type-id="text-editor">
            <state>
              <caret column="4" selection-start-column="4" selection-end-column="4" />
            </state>
          </provider>
        </entry>
      </file>
    </leaf>
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="JavaFXApplication" />
        <option value="Clojure Namespace" />
      </list>
    </option>
  </component>
  <component name="FindInProjectRecents">
    <findStrings>
      <find>get-data</find>
      <find>2</find>
      <find>'</find>
      <find>app</find>
      <find>122</find>
      <find>:key &quot;</find>
    </findStrings>
    <replaceStrings>
      <replace>get-riot-api</replace>
      <replace>:key</replace>
    </replaceStrings>
  </component>
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$" />
  </component>
  <component name="HighlightingSettingsPerFile">
    <setting file="file://$PROJECT_DIR$/src/gank/logic/summoner.clj" root0="SKIP_INSPECTION" />
  </component>
  <component name="IdeDocumentHistory">
    <option name="CHANGED_PATHS">
      <list>
        <option value="$PROJECT_DIR$/project.clj" />
        <option value="$PROJECT_DIR$/src/gank/diplomat/get_data.clj" />
        <option value="$PROJECT_DIR$/src/gank/igredients/champions.clj" />
        <option value="$PROJECT_DIR$/src/gank/igredients/ranks.clj" />
        <option value="$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
        <option value="$PROJECT_DIR$/src/gank/logic/summoner.clj" />
        <option value="$PROJECT_DIR$/src/gank/logic/match.clj" />
      </list>
    </option>
  </component>
  <component name="ProjectFrameBounds">
    <option name="x" value="79" />
    <option name="y" value="23" />
    <option name="width" value="1601" />
    <option name="height" value="1027" />
  </component>
  <component name="ProjectView">
    <navigator proportions="" version="1">
      <foldersAlwaysOnTop value="true" />
    </navigator>
    <panes>
      <pane id="Scope" />
      <pane id="PackagesPane" />
      <pane id="ProjectPane">
        <subPane>
          <expand>
            <path>
              <item name="gank" type="b2602c69:ProjectViewProjectNode" />
              <item name="gank" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="gank" type="b2602c69:ProjectViewProjectNode" />
              <item name="gank" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="gank" type="b2602c69:ProjectViewProjectNode" />
              <item name="gank" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="gank" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="gank" type="b2602c69:ProjectViewProjectNode" />
              <item name="gank" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="gank" type="462c0819:PsiDirectoryNode" />
              <item name="diplomat" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="gank" type="b2602c69:ProjectViewProjectNode" />
              <item name="gank" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="gank" type="462c0819:PsiDirectoryNode" />
              <item name="igredients" type="462c0819:PsiDirectoryNode" />
            </path>
            <path>
              <item name="gank" type="b2602c69:ProjectViewProjectNode" />
              <item name="gank" type="462c0819:PsiDirectoryNode" />
              <item name="src" type="462c0819:PsiDirectoryNode" />
              <item name="gank" type="462c0819:PsiDirectoryNode" />
              <item name="logic" type="462c0819:PsiDirectoryNode" />
            </path>
          </expand>
          <select />
        </subPane>
      </pane>
    </panes>
  </component>
  <component name="PropertiesComponent">
    <property name="last_opened_file_path" value="$PROJECT_DIR$/../common-core" />
    <property name="cursive.last.file.extension.C\:/Users/th129/Desktop/clojure/gank/src" value="clj" />
    <property name="settings.editor.selected.configurable" value="reference.settingsdialog.IDE.editor.colors.Color Scheme Font" />
  </component>
  <component name="ReplState" timestamp="1572982053461">{:repl-history {:ide [], :local [{:command &quot;(map :championId champion)&quot;, :offset 26, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map str :championId champion)&quot;, :offset 30, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(str (map :championId champion))&quot;, :offset 32, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(-&gt; (map :championId champion)\n    str)&quot;, :offset 39, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(-&gt;&gt; (map :championId champion)\n    (map str))&quot;, :offset 46, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map #(update % :championId inc) champion)&quot;, :offset 42, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn gerete-name-character [key-name champions]\n  (let [string-id (-&gt;&gt; (map :championId champions)\n                       (map str))]\n    (when (= (first key-name) (first (string-id)))\n      (map (update % :championId (second key-name)) champions))))&quot;, :offset 251, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn gerete-name-character [key-name champions]\n  (let [string-id (-&gt;&gt; (map :championId champions)\n                       (map str))]\n    (when (= (first key-name) (first (string-id)))\n      (map #(update % :championId (second key-name)) champions))))&quot;, :offset 252, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn gerete-name-character [key-name champions]\n  (let [string-id (-&gt;&gt; (map :championId champions)\n                       (map str))]\n    (when (= (first key-name) (first (string-id)))\n      (map #(update % :championId (second key-name)) champions)\n      (gerete-name-character (rest key-name) (rest champions)))))&quot;, :offset 315, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(gerete-name-character (character-id data/characters) champion)&quot;, :offset 63, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(-&gt;&gt; champion\n     first\n     :championId)&quot;, :offset 42, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(-&gt;&gt; champion\n     first\n     :championId\n     str)&quot;, :offset 51, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn gerete-character-name [characters champion]\n  (let [characters (first characters)\n        champion (-&gt;&gt; champion first :championId str)]\n    (when (= characters champion)\n      (update (first champion) :championId (second characters))\n      (gerete-character-name (rest characters) (rest champion)))))&quot;, :offset 307, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(gerete-character-name data/characters champion)&quot;, :offset 48, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(first characters)&quot;, :offset 18, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(first data/characters)&quot;, :offset 23, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(first (character-id data/characters))&quot;, :offset 38, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn gerete-character-name [characters champions]\n  (let [character-key (-&gt;&gt; (first characters) :key)\n        character-name (-&gt;&gt; (second characters) :name)\n        champion-id (-&gt;&gt; champion first :championId str)]\n    (when (= character-key champion-id)\n      (update (first champions) :championId character-name)\n      (gerete-character-name (rest characters) (rest champion)))))&quot;, :offset 382, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(-&gt;&gt; (first characters) :key)&quot;, :offset 29, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(-&gt;&gt; (first data/characters) :key)&quot;, :offset 34, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(-&gt;&gt; data/characters first :key)&quot;, :offset 32, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(-&gt;&gt; data/characters first)&quot;, :offset 27, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(-&gt;&gt; (character-id data/characters) first)&quot;, :offset 42, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(-&gt;&gt; (character-id data/characters) first :key)&quot;, :offset 47, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn gerete-character-name [characters champions]\n  (let [character-key (-&gt;&gt; first characters :key)\n        character-name (-&gt;&gt; (second characters) :name)\n        champion-id (-&gt;&gt; champion first :championId str)]\n    (println character-name)\n    (println character-key)\n    (println champion-id)\n    (when (= character-key champion-id)\n      (update (first champions) :championId character-name)\n      (gerete-character-name (rest characters) (rest champion)))))&quot;, :offset 463, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn gerete-character-name [characters champions]\n  (let [character-key (-&gt;&gt; (first characters) :key)\n        character-name (-&gt;&gt; (second characters) :name)\n        champion-id (-&gt;&gt; champion first :championId str)]\n    (println character-name)\n    (println character-key)\n    (println champion-id)\n    (when (= character-key champion-id)\n      (update (first champions) :championId character-name)\n      (gerete-character-name (rest characters) (rest champion)))))&quot;, :offset 465, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn gerete-character-name [characters champions]\n  (let [character-key (-&gt;&gt; (first characters) :key)\n        character-name (-&gt;&gt; (first characters) :name)\n        champion-id (-&gt;&gt; champion first :championId str)]\n    (println character-name)\n    (println character-key)\n    (println champion-id)\n    (when (= character-key champion-id)\n      (update (first champions) :championId character-name)\n      (gerete-character-name (rest characters) (rest champion)))))&quot;, :offset 464, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(def champion '({:championId 427\n                :championLevel 7}\n               {:championId 112\n                :championLevel 5}))&quot;, :offset 134, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(update (first champion) :championId \&quot;ivern\&quot;)&quot;, :offset 45, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(update {:championId 427, :championLevel 7} :championId \&quot;ivern\&quot;)&quot;, :offset 64, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(update {:championId 427, :championLevel 7} :championId inc)&quot;, :offset 60, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(update {:championId 427, :championLevel 7} :championId (str \&quot;inver\&quot;))&quot;, :offset 70, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(update {:championId 427, :championLevel 7} :championId 33)&quot;, :offset 59, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(assoc {:championId 427, :championLevel 7} :championId 33)&quot;, :offset 58, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(assoc {:championId 427, :championLevel 7} :championId \&quot;inver\&quot;)&quot;, :offset 63, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn gerete-character-name [characters champions]\n  (let [character-key (-&gt;&gt; (first characters) :key)\n        character-name (-&gt;&gt; (first characters) :name)\n        champion-id (-&gt;&gt; champion first :championId str)]\n    (println character-name)\n    (println character-key)\n    (println champion-id)\n    (when (= character-key champion-id)\n      (assoc (first champions) :championId character-name)\n      (gerete-character-name (rest characters) (rest champion)))))&quot;, :offset 463, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn gerete-character-name [characters champions]\n  (let [character-key (-&gt;&gt; (first characters) :key)\n        character-name (-&gt;&gt; (first characters) :name)\n        champion-id (-&gt;&gt; champion first :championId str)]\n    (println character-key)\n    (println character-name)\n    (println champion-id)\n    (when (= character-key champion-id)\n      (assoc (first champions) :championId character-name)\n      (gerete-character-name (rest characters) (rest champion)))))&quot;, :offset 463, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(gerete-character-name (character-id data/characters) champion)&quot;, :offset 63, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(get champion :championId)&quot;, :offset 26, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(get-in champion :championId)&quot;, :offset 29, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(def champion '({:championId 427 :championLevel 7}))&quot;, :offset 52, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(get :championId champion)&quot;, :offset 26, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn list-strings [list]\n  (-&gt;&gt; list\n       (map str)))&quot;, :offset 56, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn list-key [my-list key]\n  (-&gt;&gt; my-list\n       (map key)))&quot;, :offset 62, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map #(get % :championId) champion)&quot;, :offset 35, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(merge {:key \&quot;12\&quot; :name \&quot;fela\&quot;} {:championId \&quot;427\&quot; :championLevel 7})&quot;, :offset 69, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(first champion)&quot;, :offset 16, :ns &quot;gank.logic.summoner&quot;} {:command &quot;((first champion) :championId)&quot;, :offset 30, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (map (when (= ((first champion) :championId) (get % :key))\n         (merge % champion)) character-id)\n  (recur (rest champion) character-id))&quot;, :offset 183, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (map #(when (= ((first champion) :championId) (get % :key))\n         (merge % champion)) character-id))&quot;, :offset 145, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(def champion '({:championId \&quot;427\&quot; :championLevel 7}\n                {:championId \&quot;80\&quot; :championLevel 1}\n                {:championId \&quot;44\&quot; :championLevel 5}\n                {:championId \&quot;74\&quot; :championLevel 6}))&quot;, :offset 210, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (map #(when (= ((first champion) :championId) (get % :key))\n         (merge % champion)) character-id)\n  (recur (rest champion) character-id))&quot;, :offset 184, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (map #(when \n          (= (get % :key) (map #(get % :championId) champion))\n          (merge % champion))))&quot;, :offset 149, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (map (fn [character-id champion]\n         (when (= (get character-id :key) (map #(get % :championId) champion))\n           (merge character-id champion)))))&quot;, :offset 198, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (map (fn [character-id champion]\n         (when (= (get character-id :key) (map (fn [champion ] (get champion :championId)))\n           (merge character-id champion))))))&quot;, :offset 212, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (map fn [character-id champion]\n       (when (= (get character-id :key) (map (fn [champion] (get champion :championId))))\n         (merge character-id champion))))&quot;, :offset 205, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (doseq [character-id champion]\n    (when (= (get character-id :key) (map #(get % :championId) champion))\n      (merge character-id champion))))&quot;, :offset 185, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (doseq [character-id champion]\n    (when (= (get character-id :key) (map #(get % :championId) champion))\n      (println character-id)\n      (println champion)\n      (merge character-id champion))))&quot;, :offset 239, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (doseq [a character-id\n          b champion]\n    (when (= (get a :key) (map #(get % :championId) b))\n      (merge a b))))&quot;, :offset 163, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map #(get % :key) (character-id data/characters))&quot;, :offset 50, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (when (= \n          (get (first character-id) :key)\n          (map #(get % :championId) (first champion))\n    (merge character-id champion))\n  (recur (rest character-id) (rest champion))))&quot;, :offset 230, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(get (first (character-id data/characters)) :key)&quot;, :offset 49, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (when (= \n          (get (first character-id) :key)\n          (map #(get % :championId) (first champion))\n    (merge character-id champion))\n  (add-champ (rest character-id) (rest champion))))&quot;, :offset 234, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (when (=\n          (get (first character-id) :key)\n          (map #(get % :championId) (first champion))\n    (merge (first character-id) (first champion))\n  (recur (rest character-id) (rest champion)))))&quot;, :offset 245, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (when (= (get (first character-id) :key) (map #(get % :championId) (first champion)))\n    (merge character-id champion)\n  (recur (rest character-id) (rest champion))))&quot;, :offset 209, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id champion]\n  (when (= (get (first character-id) :key) (map #(get % :championId) (first champion)))\n    (merge (first character-id) (first champion))\n  (recur (rest character-id) (rest champion))))&quot;, :offset 225, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(add-champ (character-id data/characters) champion)&quot;, :offset 51, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map maestria :championId)&quot;, :offset 26, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map :championId maestria)&quot;, :offset 26, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map #((when (= (get % :key) (map :key (character-id data/characters)))\n         (merge % character-id)) maestria))&quot;, :offset 115, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map #((when (= (get % :key) (map :key (character-id data/characters)))\n         (println %)) maestria))&quot;, :offset 104, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-id maestria]\n  (let [unit (first maestria)]\n    (when (= (get maestria :championId) (get character-id :key))\n      (merge character-id maestria)))\n  (recur (rest character-id) maestria))&quot;, :offset 213, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-key-name maestria]\n  (map #((when (= (get % :championId) (get character-key-name :key))\n           (merge character-key-name %))) maestria))&quot;, :offset 167, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(keys (character-id data/characters))&quot;, :offset 37, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-key-name maestria]\n  (let [value (first maestria)]\n    (when (= (get value :championId) (get maestria :key))\n      (merge maestria value))))&quot;, :offset 167, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn add-champ [character-key-name maestria]\n  (let [value (first maestria)]\n    (when (= (get value :championId) (get maestria :key))\n      (merge maestria value))\n    (recur character-key-name (rest maestria))))&quot;, :offset 214, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(add-champ (character-id data/characters) maestria)&quot;, :offset 51, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(clojure.set/join (character-id data/characters) (map maestria))&quot;, :offset 64, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map add-champ maestria)&quot;, :offset 24, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map my-fn (character-id data/characters))&quot;, :offset 42, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn match-keys [hmap1 key1 hmap2 key2]\n  (let [key (:key hmap1)\n        matching-map (find-first #(-&gt; % :key2 (= key)) hmap2)]\n    (merge hmap1 matching-map)))&quot;, :offset 161, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn match-keys [hmap1 key1 key2 hmap2]\n  (let [key (:key hmap1)\n        matching-map (find-first #(-&gt; % key2 (= key)) hmap2)]\n    (merge hmap1 matching-map)))&quot;, :offset 160, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn find-first [pred coll]\n  \&quot;Return the first match of the predicate.\n  Example:\n    (find-first even? [1 2 3 4]) =&gt; 2\n  \&quot;\n  (first (filter pred coll)))&quot;, :offset 155, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(ns gank.logic.summoner\n  (:require [gank.igredients.champions :as data]))&quot;, :offset 74, :ns &quot;gank.server&quot;} {:command &quot;(defn character-id [characters]\n  (let [names (-&gt;&gt; characters\n                   :data\n                   (map first))]\n    (map #(select-keys (-&gt; characters :data %) [:key :name]) names)))&quot;, :offset 189, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(character-id data/characters)&quot;, :offset 30, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(def maestria '({:championId \&quot;427\&quot; :level 1}\n                {:championId \&quot;80\&quot; :level 4}))&quot;, :offset 90, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map match-keys (character-id data/characters) :key maestria :championId)&quot;, :offset 73, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map match-keys (character-id data/characters) :key :championId maestria)&quot;, :offset 73, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn match-keys [hmap1 hmap2]\n  (let [key (:key hmap1)\n        matching-map (find-first #(-&gt; % :championId (= key)) hmap2)]\n    (merge hmap1 matching-map)))&quot;, :offset 157, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn match-keys [hmap1 hmap2]\n  (let [key (:key hmap1)\n        matching-map (find-first #(-&gt; % :championId (= key)) maestria)]\n    (merge hmap1 matching-map)))&quot;, :offset 160, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn match-keys [hmap]\n  (let [key (:key hmap)\n        matching-map (find-first #(-&gt; % :championId (= key)) maestria)]\n    (merge hmap matching-map)))&quot;, :offset 151, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map match-keys (character-id data/characters))&quot;, :offset 47, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn match-keys [hmap hmap1]\n  (let [key (:key hmap)\n        matching-map (find-first #(-&gt; % :championId (= key)) hmap1)]\n    (merge hmap matching-map)))&quot;, :offset 154, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map match-keys (character-id data/characters) maestria)&quot;, :offset 56, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn match-keys [summoner-mastery]\n  (let [key (:championId summoner-mastery)\n        matching-map (find-first #(-&gt; % :key (= key)) (character-id data/characters))]\n    (merge summoner-mastery matching-map)))&quot;, :offset 209, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(map match-keys maestria)&quot;, :offset 25, :ns &quot;gank.logic.summoner&quot;} {:command &quot;(defn calc-win-rate [accountId nick]\n  (let [matches    (-&gt; nick d.match/summoner-matchs (get :matches))\n        match-list (map :gameId matches)]\n    (map #(win-match? accountId %) match-list)))&quot;, :offset 195, :ns &quot;gank.logic.match&quot;} {:command &quot;*e&quot;, :offset 2, :ns &quot;gank.server&quot;} {:command &quot;(calc-win-rate \&quot;nAxFJW2DCzBFFt2RFACFY2jgvZqb6fIumwYePV4hEEG5\&quot; \&quot;KottoNette\&quot;)&quot;, :offset 75, :ns &quot;gank.logic.match&quot;}], :remote []}}</component>
  <component name="RunDashboard">
    <option name="ruleStates">
      <list>
        <RuleState>
          <option name="name" value="ConfigurationTypeDashboardGroupingRule" />
        </RuleState>
        <RuleState>
          <option name="name" value="StatusDashboardGroupingRule" />
        </RuleState>
      </list>
    </option>
  </component>
  <component name="RunManager">
    <configuration default="true" type="Applet" factoryName="Applet">
      <option name="POLICY_FILE" value="$APPLICATION_HOME_DIR$/bin/appletviewer.policy" />
    </configuration>
    <configuration default="true" type="Application" factoryName="Application">
      <option name="WORKING_DIRECTORY" value="$PROJECT_DIR$" />
    </configuration>
    <configuration name="Gank-Repl" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <module name="gank" />
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="$PROJECT_DIR$" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Local" activateToolWindowBeforeRun="false">
      <setting name="replType" value="NREPL" />
      <setting name="execution" value="LEININGEN" />
      <module name="" />
      <setting name="jvmArgs" value="" />
      <setting name="parameters" value="" />
      <setting name="workingDir" value="" />
      <setting name="profiles" value="" />
      <setting name="aliases" value="" />
    </configuration>
    <configuration default="true" type="ClojureREPL" factoryName="Remote" activateToolWindowBeforeRun="false">
      <setting name="host" value="" />
      <setting name="port" value="0" />
      <setting name="replType" value="0" />
      <module name="" />
    </configuration>
    <configuration default="true" type="JUnit" factoryName="JUnit">
      <option name="ALTERNATIVE_JRE_PATH_ENABLED" value="false" />
      <option name="ALTERNATIVE_JRE_PATH" />
      <option name="PACKAGE_NAME" />
      <option name="MAIN_CLASS_NAME" />
      <option name="METHOD_NAME" />
      <option name="TEST_OBJECT" value="class" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
      <option name="PASS_PARENT_ENVS" value="true" />
      <option name="TEST_SEARCH_SCOPE">
        <value defaultName="singleModule" />
      </option>
      <patterns />
    </configuration>
    <configuration name="&lt;template&gt;" type="TestNG" default="true" selected="false">
      <option name="MAIN_CLASS_NAME" />
      <option name="VM_PARAMETERS" value="-ea" />
      <option name="PARAMETERS" />
      <option name="WORKING_DIRECTORY" value="%MODULE_WORKING_DIR%" />
    </configuration>
  </component>
  <component name="TaskManager">
    <task active="true" id="Default" summary="Default task">
      <changelist id="c70f70b9-934d-4cf2-b671-01f241360dd1" name="Default" comment="" />
      <created>1569698467620</created>
      <option name="number" value="Default" />
      <option name="presentableId" value="Default" />
      <updated>1569698467620</updated>
    </task>
    <servers />
  </component>
  <component name="TodoView">
    <todo-panel id="selected-file">
      <is-autoscroll-to-source value="true" />
    </todo-panel>
    <todo-panel id="all">
      <are-packages-shown value="true" />
      <is-autoscroll-to-source value="true" />
    </todo-panel>
  </component>
  <component name="ToolWindowManager">
    <frame x="79" y="23" width="1601" height="1027" extended-state="6" />
    <editor active="true" />
    <layout>
      <window_info anchor="bottom" id="TODO" order="6" weight="0.32928178" />
      <window_info anchor="right" id="Palette&#9;" order="3" />
      <window_info anchor="bottom" id="Event Log" order="7" side_tool="true" />
      <window_info anchor="right" id="Maven Projects" order="3" />
      <window_info active="true" anchor="right" id="REPL" order="3" side_tool="true" visible="true" weight="0.23476587" />
      <window_info anchor="bottom" id="Run" order="2" weight="0.32928178" />
      <window_info anchor="bottom" id="Version Control" order="7" />
      <window_info anchor="right" id="Leiningen" order="3" />
      <window_info anchor="bottom" id="Terminal" order="7" weight="0.32928178" />
      <window_info id="Designer" order="2" />
      <window_info content_ui="combo" id="Project" order="0" weight="0.09942271" />
      <window_info id="Structure" order="1" side_tool="true" weight="0.25" />
      <window_info anchor="bottom" id="Debug" order="3" weight="0.4" />
      <window_info id="Favorites" order="2" side_tool="true" />
      <window_info anchor="right" content_ui="combo" id="Hierarchy" order="2" weight="0.25" />
      <window_info anchor="bottom" id="Inspection" order="5" weight="0.4" />
      <window_info anchor="right" id="Commander" order="0" weight="0.4" />
      <window_info anchor="right" id="Ant Build" order="1" weight="0.25" />
      <window_info anchor="bottom" id="Message" order="0" />
      <window_info anchor="bottom" id="Cvs" order="4" weight="0.25" />
      <window_info anchor="bottom" id="Find" order="1" />
    </layout>
  </component>
  <component name="VcsContentAnnotationSettings">
    <option name="myLimit" value="2678400000" />
  </component>
  <component name="editorHistoryManager">
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/ranks.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="22" selection-start-line="22" selection-end-line="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/champions.clj" />
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="532">
          <caret line="19" column="34" selection-start-line="19" selection-start-column="34" selection-end-line="19" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/logic/summoner.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="840">
          <caret line="30" column="23" selection-start-line="30" selection-start-column="23" selection-end-line="30" selection-end-column="23" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/ranks.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="22" selection-start-line="22" selection-end-line="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/champions.clj" />
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="532">
          <caret line="19" column="34" selection-start-line="19" selection-start-column="34" selection-end-line="19" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/logic/summoner.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="672">
          <caret line="24" lean-forward="true" selection-start-line="24" selection-end-line="24" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/ranks.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="22" selection-start-line="22" selection-end-line="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/champions.clj" />
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="532">
          <caret line="19" column="34" selection-start-line="19" selection-start-column="34" selection-end-line="19" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/logic/summoner.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="756">
          <caret line="27" column="15" selection-start-line="27" selection-start-column="15" selection-end-line="27" selection-end-column="15" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/ranks.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="22" lean-forward="true" selection-start-line="22" selection-end-line="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/champions.clj" />
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="532">
          <caret line="19" column="34" selection-start-line="19" selection-start-column="34" selection-end-line="19" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/logic/summoner.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="476">
          <caret line="17" column="41" selection-start-line="17" selection-end-line="17" selection-end-column="47" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/ranks.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="22" lean-forward="true" selection-start-line="22" selection-end-line="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/champions.clj" />
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="532">
          <caret line="19" column="34" selection-start-line="19" selection-start-column="34" selection-end-line="19" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/logic/summoner.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="308">
          <caret line="11" column="52" lean-forward="true" selection-start-line="11" selection-start-column="52" selection-end-line="11" selection-end-column="52" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/ranks.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="224">
          <caret line="8" column="47" lean-forward="true" selection-start-line="8" selection-start-column="47" selection-end-line="8" selection-end-column="47" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/champions.clj" />
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="532">
          <caret line="19" column="34" selection-start-line="19" selection-start-column="34" selection-end-line="19" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/ranks.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="560">
          <caret line="20" column="12" lean-forward="true" selection-start-line="20" selection-start-column="12" selection-end-line="20" selection-end-column="12" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/champions.clj" />
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="532">
          <caret line="19" column="34" selection-start-line="19" selection-start-column="34" selection-end-line="19" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/champions.clj" />
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="532">
          <caret line="19" column="34" selection-start-line="19" selection-start-column="34" selection-end-line="19" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="414">
          <caret line="18" column="36" selection-start-line="18" selection-start-column="36" selection-end-line="18" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/champions.clj" />
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/get_riot_api.clj" />
    <entry file="file://$PROJECT_DIR$/src/gank/igredients/ranks.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="616">
          <caret line="22" selection-start-line="22" selection-end-line="22" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/project.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="532">
          <caret line="19" column="34" selection-start-line="19" selection-start-column="34" selection-end-line="19" selection-end-column="34" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/logic/summoner.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="403">
          <caret line="13" column="10" selection-start-line="13" selection-start-column="10" selection-end-line="13" selection-end-column="10" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/champions.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/ranked_queue.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/logic/commons.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/logic/date_time.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/match.clj">
      <provider selected="true" editor-type-id="text-editor" />
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/summoner.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state>
          <caret column="4" selection-start-column="4" selection-end-column="4" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/diplomat/commons.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="124">
          <caret line="4" column="36" selection-start-line="4" selection-start-column="36" selection-end-line="4" selection-end-column="36" />
        </state>
      </provider>
    </entry>
    <entry file="file://$PROJECT_DIR$/src/gank/logic/match.clj">
      <provider selected="true" editor-type-id="text-editor">
        <state relative-caret-position="695">
          <caret line="31" column="5" selection-start-line="31" selection-start-column="5" selection-end-line="31" selection-end-column="5" />
        </state>
      </provider>
    </entry>
  </component>
</project>